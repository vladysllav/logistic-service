name: CI-CD

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  quality-assurance:
    name: Quality Assurance
    runs-on: ubuntu-latest
    container: python:3.11-slim-buster

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        ports:
          - "5433:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis:latest
        ports:
          - "6379:6379"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        uses: docker/compose-action@v2
        with:
          compose-file: docker-compose.yml

      - name: Run Pre-commit Hooks
        run: docker-compose run web poetry run pre-commit run --all-files

      - name: Run Unit Tests
        run: docker-compose -f docker-compose.yml run web poetry run python src/manage.py test
